Test Automation Tools/PreRequisites:
autotest 4.3.2
autotest-rails-pure 4.1.0
ZenTest
redgreen
(Aptitude): libnotify-bin
.autotest
.autotest_images
autotest-growl

factory_girl_rails, 1.0

gem spork, '0.8.4'  (spork --bootstrap)
  - modified spec_helper.rb

Enabling public access to model attributes via: "attr_accessible: :<attr1>, :<attr2> ..."

Development Console (session is rolled back on exit)
>rails console --sandbox


References:
http://growl.info (Growl for Mac OS X)
http://growlforwindows.com (Growl for Windows)
http://www.galago-project.org (libnotify for Linux)

Instance Variables: @title
   Layout / DRY (Don't repeat yourself)
   Debug practice/concepts


  
C4:
defining application methods (ie...title, to utilize in layout/application)
BluePrintscss.org


Literals/Strings; Interpolating
Arrays
String methods:
sort, reverse. shuffle, first, second, last, -1, split(<split char>)
Array methods: .join(<join character>)

to_a (to array)

a = %w[elements....]   - create a string array, no quotes required

Implicit Return :
def <method name>()
 ...
 ... implicit return
end

Rails Helper Declarations (DRY)
 - availability of methods 

('a'..'z').to_a.shuffle[0..7].join
  to_a -  to character array
  shuffle - randomize
  shuffle[0..7] - returns first 8 random elements of array
  join - joins results of array into one string


hashes
  hashname = {}
    hashname["attribute"] = "value"

Symbols - :<symbol value>

.inspect - method return string literal of object

class, superclass
Inheritance Hiearchy Concepts

Modifying Built in Classes
class String
   def <method>?
   ...
  end
end

----------------------------------------------
Examples:   self.split('').shuffle.join

person1={:first => 'f', :last => 'l'}
params{}
params[:winner]=person1
w_first = params[:winner][:first]
w_last = params[:winner][:last]

===============================================

C5:
stylesheets,
partials
routes
integration tests
-=----------------

C6:
Generating models (rails generate <table-name> field:datatype.....)
rake utility
  db:migrate
  db:rollback


Models/spec/db files timestamped.


gem annotate-models 1.0.4
  - provides the annotate command, used for model notations.  
    'Extremely' useful.


c7:
password authentication
encrypt
private methods
Testing methodologies
self.
require 'digest'
rails generate migration add_field_to_<table> <field>:<datatype>
validates
attr_accessor
attr_accessible
rake db:migrate
rake db:test:prepare

create!()
secure_hash()
encrypt()

Factories


have_selector method

gravatar_image_tag , 0.1.0

Named Route   - Path Examples (for user)
----------------------------------
user_path /users
user_path(@user) /users/1
new_user_path /users/new
edit_user_path(@user) /users/1/edit
  Url related paths: 
users_url   http://...../users
user_url(@user) ...
new_user_url ...
edit_user_url(@user) ...
----------------------------------


<%= link_to user_path(@user), @user %>

 in context of "link_to" the above is equivalent to:

<%= link_to user_path(@user), user_path(@user) %>

-----------------------------------



Resources:

Testing
http://growl.info (Growl for Mac OS X)
http://growlforwindows.com (Growl for Windows)
http://www.galago-project.org (libnotify for Linux)

github

CSS
Blueprintcss.org

Ruby:
railstutorial.org
"The Rails 3 Way" (Obie Fernandez)
railslab.newrelic.com

"The Well Grounded Rubyist"



